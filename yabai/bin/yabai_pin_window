#!/bin/bash

# Pin window to far left, far right, or center of multi-display setup
# Usage: yabai_pin_window left|right|center|center-left|center-right [width]

DIRECTION=$1
WIDTH=${2:-}
CENTER_WIDTH=2160

if [[ "$DIRECTION" != "left" && "$DIRECTION" != "right" && "$DIRECTION" != "center" && "$DIRECTION" != "center-left" && "$DIRECTION" != "center-right" ]]; then
    echo "Usage: yabai_pin_window left|right|center|center-left|center-right [width]"
    exit 1
fi

# Get all displays sorted by x position
DISPLAYS=$(yabai -m query --displays | jq 'sort_by(.frame.x)')
NUM_DISPLAYS=$(echo "$DISPLAYS" | jq 'length')

if [[ "$DIRECTION" == "left" ]]; then
    # Get leftmost display
    DISPLAY=$(echo "$DISPLAYS" | jq '.[0]')
    DISPLAY_W=$(echo "$DISPLAY" | jq -r '.frame.w')
    # If single display, use half width; if multiple, use full width
    if [[ $NUM_DISPLAYS -eq 1 ]]; then
        WIDTH=${WIDTH:-$(echo "$DISPLAY_W / 2" | bc)}
    else
        WIDTH=${WIDTH:-$DISPLAY_W}
    fi
elif [[ "$DIRECTION" == "right" ]]; then
    # Get rightmost display
    DISPLAY=$(echo "$DISPLAYS" | jq '.[-1]')
    DISPLAY_W=$(echo "$DISPLAY" | jq -r '.frame.w')
    # If single display, use half width; if multiple, use full width
    if [[ $NUM_DISPLAYS -eq 1 ]]; then
        WIDTH=${WIDTH:-$(echo "$DISPLAY_W / 2" | bc)}
    else
        WIDTH=${WIDTH:-$DISPLAY_W}
    fi
elif [[ "$DIRECTION" == "center-left" || "$DIRECTION" == "center-right" ]]; then
    # Always use center display
    DISPLAY=$(echo "$DISPLAYS" | jq '[.[] | select(.["has-focus"] == true)][0] // .[1] // .[0]')
    DISPLAY_W=$(echo "$DISPLAY" | jq -r '.frame.w')

    # Calculate width based on number of displays
    if [[ $NUM_DISPLAYS -eq 1 ]]; then
        # Single display: calculate remaining space after left (half) + center ($CENTER_WIDTH) + right (half)
        # Remaining space = (DISPLAY_W - DISPLAY_W/2 - $CENTER_WIDTH - DISPLAY_W/2) / 2 = (DISPLAY_W - $CENTER_WIDTH) / 2 / 2
        # Split the remaining space in quarters
        WIDTH=${WIDTH:-$(echo "($DISPLAY_W - $CENTER_WIDTH) / 4" | bc)}
    elif [[ $NUM_DISPLAYS -eq 3 ]]; then
        # Three displays: narrow sidebar, same width as the space in single display
        WIDTH=${WIDTH:-$(echo "($DISPLAY_W - $CENTER_WIDTH) / 2" | bc)}
    else
        # Two displays or other: use a reasonable default
        WIDTH=${WIDTH:-960}
    fi
else
    # Center - use the main/center display
    # Find the display with has-focus true, or use middle display
    DISPLAY=$(echo "$DISPLAYS" | jq '[.[] | select(.["has-focus"] == true)][0] // .[1] // .[0]')
    WIDTH=${WIDTH:-$CENTER_WIDTH}
fi

# Extract display dimensions
DISPLAY_X=$(echo "$DISPLAY" | jq -r '.frame.x')
DISPLAY_Y=$(echo "$DISPLAY" | jq -r '.frame.y')
DISPLAY_W=$(echo "$DISPLAY" | jq -r '.frame.w')
DISPLAY_H=$(echo "$DISPLAY" | jq -r '.frame.h')

# Calculate window position
if [[ "$DIRECTION" == "left" ]]; then
    # Pin to left edge
    X=$DISPLAY_X
elif [[ "$DIRECTION" == "right" ]]; then
    # Pin to right edge
    X=$(echo "$DISPLAY_X + $DISPLAY_W - $WIDTH" | bc)
elif [[ "$DIRECTION" == "center-left" ]]; then
    # Pin to left edge of center display
    X=$DISPLAY_X
elif [[ "$DIRECTION" == "center-right" ]]; then
    # Pin to right edge of center display
    X=$(echo "$DISPLAY_X + $DISPLAY_W - $WIDTH" | bc)
else
    # Center on display
    X=$(echo "$DISPLAY_X + ($DISPLAY_W - $WIDTH) / 2" | bc)
fi

Y=$DISPLAY_Y
H=$DISPLAY_H

# Check if window is floating, if not make it float
IS_FLOATING=$(yabai -m query --windows --window | jq -r '.["is-floating"]')
if [[ "$IS_FLOATING" != "true" ]]; then
    yabai -m window --toggle float
fi

# Move and resize window
yabai -m window --move abs:${X}:${Y}
yabai -m window --resize abs:${WIDTH}:${H}
